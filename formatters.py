def format_route_info(data: dict) -> str:
    return (
        f"*üöç –ù–æ–º–µ—Ä —Ä–µ–π—Å–∞:* `{data['number']}`\n"
        f"*üìç –ú–∞—Ä—à—Ä—É—Ç:* {data['name']}\n"
        f"*üë§ –í–æ–¥–∏—Ç–µ–ª—å:* {data['user']}\n"
        f"*üöó –ê–≤—Ç–æ:* {data['auto']}"
    )

# –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å—ã–ª–∫–∞—Ö


def format_parcels(data):
    formatted_text = ""

    for route in data:
        send_city = route['sendCity']
        rec_city = route['recCity']
        parcels = route['parcels']

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –±–ª–æ–∫–∞
        formatted_text += f"\nüì¶ *–û—Ç–ø—Ä–∞–≤–∫–∞:* {send_city} ‚Üí {rec_city}\n"

        if not parcels:
            formatted_text += "_–ù–µ—Ç –ø–æ—Å—ã–ª–æ–∫_\n"
            continue

        # –î–µ—Ç–∞–ª–∏ –ø–æ –∫–∞–∂–¥–æ–π –ø–æ—Å—ã–ª–∫–µ
        for idx, parcel in enumerate(parcels, start=1):
            number = parcel['number']
            customer = parcel['customer']
            del_type = parcel['delType']

            formatted_text += f"{idx}. `{number}` - {customer} {format_delivery_type(del_type)}\n"

    return formatted_text


# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∏–ø–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
def format_delivery_type(del_type):
    if "–°–∫–ª–∞–¥-–î–≤–µ—Ä—å" in del_type:
        return "üè† –°–∫–ª–∞–¥-–î–≤–µ—Ä—å"
    elif "–°–∫–ª–∞–¥-–°–∫–ª–∞–¥" in del_type:
        return "üè¢ –°–∫–ª–∞–¥-–°–∫–ª–∞–¥"
    elif "–î–≤–µ—Ä—å-–°–∫–ª–∞–¥" in del_type:
        return "üö™ –î–≤–µ—Ä—å-–°–∫–ª–∞–¥"
    return del_type
